{"version":3,"sources":["services/userAPI.js","components/Loading.js","pages/Login.js","components/Header.js","services/searchAlbumsAPI.js","components/AlbumCard.js","pages/Search.js","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.js","pages/Album.js","pages/Favorites.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","Loading","React","Component","Login","handleChange","target","id","value","btnClick","state","length","setState","handleClick","loginField","loading","name","email","image","description","then","ret","redirect","this","className","type","onChange","placeholder","onClick","disabled","to","Header","nome","load","searchAlbumsAPI","artist","a","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","AlbumCard","props","src","alt","Search","e","preventDefault","search","resp","lastResult","listOfAlbums","music","getMusics","request","requestJson","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","MusicCard","carrega","finaliza","favoriteClick","o","song","checked","isCheck","filter","s","trackId","removeSong","retorno","some","fav","nameMusic","previewUrl","forSave","controls","kind","htmlFor","Album","getMuisicFromAp","data","songs","musics","match","params","key","trackName","Favorites","Profile","ProfileEdit","NotFound","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a029e6c3.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\n\nexport default class Loading extends React.Component {\n  render() {\n    return (\n      <div>\n        Carregando...\n      </div>);\n  }\n}\n// criação de um componente carregando para renderizar ele nos lugares necessários\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    // state default para cada um dos paramentros\n    this.state = {\n      loginField: '', // input vazio\n      btnClick: true, // setado como true pro botao ficar desabilitado\n      loading: false, // carregando como falso para fazer a lógica invertida lá em baixo\n      redirect: false, // redirect como false para assim que clicar no botao ir para a pagina search lá em baixo\n    };\n  }\n\n  handleChange = ({ target: { id, value } }) => {\n    let { btnClick } = this.state;\n    const min = 3;\n    btnClick = value.length < min; // botao só vai ser habilitado assim que tiver mais que 3 letras\n    this.setState({\n      [id]: value,\n      btnClick,\n    });\n    // pegando o id e o value para assim que clicar (target)pegar o id da musica\n  }\n\n  handleClick = () => {\n    // usando o handleClick para simular uma api que cria um usuario e muda as suas informações quando necessario\n    const { loginField } = this.state;\n    this.setState({ loading: true }); // fazendo o carregando aparecer assim que clicar no botao\n    createUser({ name: loginField }).then((ret) => (\n      // pegando o login para assim que o usuario digitar o nome dele ele renderizar e assim o nome mudar\n      this.setState({\n        redirect: ret,\n      })\n      // seto o estado do redirect para que lá em baixo depois que o botao for clicado a página mudar de rota\n    ));\n  }\n\n  render() {\n    const { loginField, btnClick, loading, redirect } = this.state;\n    return (\n      <div data-testid=\"page-login\" className=\"input-group mb-3\">\n        {!loading ? (\n          <form className=\"form-login\">\n            <p> Digite seu nome: </p>\n            <input\n              type=\"text\"\n              id=\"loginField\"\n              data-testid=\"login-name-input\"\n              onChange={ this.handleChange }\n              value={ loginField }\n              placeholder=\"Arthur\"\n              className=\"form-control\"\n            />\n            <br />\n            <br />\n            <button\n              data-testid=\"login-submit-button\"\n              id=\"btnLogin\"\n              type=\"submit\"\n              onClick={ this.handleClick }\n              disabled={ btnClick }\n              className=\"btn btn-outline-primary\"\n            >\n              Entrar\n            </button>\n            <br />\n            <br />\n          </form>) : <Loading />}\n        {/* usando o ternário para renderizar o carregando depois que o botao de entrar for clicado */}\n        {redirect && <Redirect to=\"/search\" />}\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nome: '',\n      load: false,\n    };\n    // setando o nome como vazio incialmente e o loading como false\n  }\n\n  componentDidMount() {\n    getUser().then(({ name }) => {\n      this.setState({\n        nome: name,\n        load: true,\n      });\n    });\n    // usando o componentDidMount pois ele serve para fazer o que está dentro dele assim que o componente for montado, usando a função getUser para resgatar as informações do usuario que no caso eu seto o state para pegar o nome que o usuario colocou lá no input, e assim que eu entro no header o carregando é mudado para true e assim renderizado na tela\n  }\n\n  render() {\n    const { nome, load } = this.state;\n    return (\n      <header data-testid=\"header-component\">\n        {/* se o load for falso (como setado no inicio) ele renderiza o componente, e quando load for true que no caso é quando o usuario entra na pagina então ele renderiza o carregando */}\n        {/* criação dos links de navegação para o usuario */}\n        {load ? (\n          <div>\n            <h4 data-testid=\"header-user-name\">\n              Usuário:\n              { ' ' }\n\n              {nome}\n            </h4>\n            <Link\n              data-testid=\"link-to-profile\"\n              to=\"/profile\"\n              className=\"link-dark\"\n            >\n              Profile\n            </Link>\n            <br />\n            <br />\n            <Link\n              data-testid=\"link-to-favorites\"\n              to=\"/favorites\"\n              className=\"link-dark\"\n            >\n              Favorites\n            </Link>\n            <br />\n            <br />\n            <Link\n              data-testid=\"link-to-search\"\n              to=\"/search\"\n              className=\"link-dark\"\n            >\n              Search\n            </Link>\n            <br />\n            <br />\n          </div>) : <Loading />}\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass AlbumCard extends Component {\n  render() {\n    const { id, artist, image, collectionName } = this.props;\n    return (\n      <div>\n        {/* Transformando o card do album em um link clicavel e renderizando de acordo com o que o usuario pesquisou, pegando a imagem, o nome do album e o nome do artista */}\n        <Link\n          data-testid={ `link-to-album-${id}` }\n          to={ `/album/${id}` }\n          className=\"link-dark\"\n        >\n          <div>\n            <br />\n            <br />\n            <img src={ image } alt={ collectionName } />\n            <br />\n            <br />\n            <span>{ collectionName }</span>\n            <br />\n            <span>{ artist }</span>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nAlbumCard.propTypes = {\n  id: PropTypes.string,\n  artist: PropTypes.string,\n  image: PropTypes.string,\n  collectionName: PropTypes.string,\n}.isRequired;\n\nexport default AlbumCard;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport AlbunsCards from '../components/AlbumCard';\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: '',\n      btnClick: true,\n      load: false,\n      listOfAlbums: [],\n      lastResult: '',\n    };\n    // setando todos os estados default normalmente\n  }\n\n  handleChange = ({ target: { id, value } }) => {\n    let { btnClick } = this.state;\n    const MIN_NUMBER = 2;\n    btnClick = value.length < MIN_NUMBER; // habilitando o botao apenas depois de digitar o numero minimo\n    this.setState({\n      [id]: value,\n      btnClick,\n    });\n    // desestruturei o target para ele pegar o [id] de acordo com o value que seria a string da musica que eu quero\n  }\n\n  handleClick = async (e) => {\n    e.preventDefault(); // usando o preventDefault para ver se o evento é cancelavel ou não (li na documentação)\n    const { search } = this.state;\n    this.setState({ load: true });\n    // pegando o search como state para usar ele quando a musica for pesquisada la no input como value e passando o load como true para renderizar um carregando assim que clicar em pesquisar\n    searchAlbumsAPI(search).then((resp) => {\n      this.setState({\n        lastResult: search,\n        search: '',\n        listOfAlbums: [...resp],\n        load: false,\n      });\n      // setanto o state do lastResult com o valor que a pessoa colocar no input que no caso é o search, limpando o input, e espalhando os albums achados por essa api, que no caso retorna uma promise, e tirando o carregando da tela com o load false\n    });\n  }\n\n  render() {\n    const { search, btnClick, load, listOfAlbums, lastResult } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        {/* renderizados o header com os links e fazendo a lógica de sempre, carregando antes e renderizando depois o que eu quero  */}\n        {!load ? (\n          <form>\n            <input\n              type=\"text\"\n              id=\"search\"\n              data-testid=\"search-artist-input\"\n              onChange={ this.handleChange }\n              value={ search }\n              className=\"form-control\"\n            />\n            <br />\n            <br />\n            <button\n              data-testid=\"search-artist-button\"\n              id=\"btnSearch\"\n              type=\"submit\"\n              onClick={ this.handleClick }\n              disabled={ btnClick }\n              className=\"btn btn-outline-primary\"\n            >\n              Pesquisar\n            </button>\n            <br />\n            <br />\n          </form>) : <Loading />}\n        {(listOfAlbums.length > 0) ? (\n          // aqui to verificando se a lista de albuns for maior que 0 no caso se o album existir eu renderizo ele na tela, senão eu renderizo uma mensagem de que nada foi encontrado\n          <div>\n            <span>\n              { `Resultado de álbuns de: ${lastResult}` }\n              {/* passando o last result como state para renderizar essa mensagem com o album que a pessoa procurou */}\n            </span>\n            { listOfAlbums.map((music) => (\n              <AlbunsCards\n                key={ music.collectionId }\n                id={ music.collectionId }\n                collectionName={ music.collectionName }\n                artist={ music.artistName }\n                image={ music.artworkUrl100 }\n                // fazendo um map com o array de albuns encontrado de acordo com o albumCard e as props que eu passei, e passando as chaves da api para renderizar tudo certo\n              />\n            ))}\n          </div>)\n          : (\n            <p>Nenhum álbum foi encontrado</p>)}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isCheck: false,\n      load: false,\n    };\n    // setando o check como false para assim que o usuario clicar no input a musica ser favoritada e o load inicialmente como falso\n  }\n\n  componentDidMount() {\n    const { trackId } = this.props;\n    getFavoriteSongs(trackId).then((resp) => {\n      // a função getFavoriteSongs retorna um array com as musicas favoritas selecionadas ou um vazio caso não tiver nenhuma, ela faz a requisição de acordo com o id e eu pego a resposta dessa api e uso o some para caso o retorno for true ele retornar a musica que eu favoritei\n      const retorno = resp.some((fav) => fav.trackId === trackId);\n      // pego o id da musica e faço uma verificação assim que o componente é montado\n      this.setState({\n        isCheck: retorno,\n        load: false,\n      });\n    });\n  }\n\n  carrega = () => {\n    this.setState({\n      load: true,\n    });\n    // setando o loading como true para usar ele ali em baixo onde vou precisar\n  }\n\n  finaliza = () => {\n    this.setState({\n      load: false,\n    });\n    // setando o loading como false para usar ele quando não quiser mais que o carregando apareça\n  }\n\n  favoriteClick = ({ target: { checked } }, carrega, finaliza, o) => {\n    carrega(); // fazendo o carregar aparecer\n    if (checked) {\n      addSong(o).then(() => {\n        this.setState({\n          isCheck: true,\n        }, finaliza);\n      });\n      // fazendo um if para caso o input estiver checkado eu usar a função addSong para adicionar aos favoritos, e assim setando o estado do check como true\n    } else {\n      removeSong(o).then(() => {\n        this.setState({\n          isCheck: false,\n        }, finaliza);\n      });\n      // aqui basicamente a mesma coisa, simulando a requisição de uma musica que voce quer adicionar e assim que acontece, uso o finaliza tb para tirar o carregando assim que for concluido, e assim tb setando o check como false caso eu clique no input para remover a musica\n    }\n  }\n\n  render() {\n    const { isCheck, load } = this.state;\n    const { nameMusic, previewUrl, trackId, forSave } = this.props;\n    return (\n      <div data-testid=\"musicacard-page\">\n        {/* passando as props para renderizar a musica pesquisada de acordo com o que a função resgatou */}\n        {!load ? (\n          // transformando o load em true para que quando ele for false renderizar o loading\n          <div btn-group>\n            <h4>{nameMusic}</h4>\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              O seu navegador não suporta o elemento\n              <code>audio</code>\n            </audio>\n            <label htmlFor={ trackId } className=\"btn btn-outline-primary\">\n              Favorita\n              <input\n                name={ trackId }\n                id={ trackId }\n                className=\"btn-check btncheck1\"\n                type=\"checkbox\"\n                data-testid={ ` checkbox-music-${trackId}` }\n                onChange={ (e) => {\n                  this.favoriteClick(e, this.carrega, this.finaliza, forSave);\n                } }\n                // passando a função e usando o target que eu desconstrui la em cima para renderizar o nome da musica certinho, e depois dela renderizar o carregando, e depois finalizar\n                checked={ isCheck }\n              />\n            </label>\n          </div>\n        ) : <Loading />}\n\n      </div>\n\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  previewUrl: propTypes.string,\n  nameMusic: propTypes.string,\n  trackId: propTypes.string,\n  forSave: propTypes.object,\n}.isRequired;\n\nexport default MusicCard;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicaCard from '../components/MusicCard';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      musics: [],\n      artistName: '',\n      collectionName: '',\n    };\n    // construindo o state default\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    this.getMuisicFromAp(id);\n    // usando essa função para fazer a requisição do album de acordo com o id do album assim que o componente for montado, e desestruturando o match que seria um dos parametros proprios do react\n  }\n\n  getMuisicFromAp = async (id) => {\n    const data = await getMusics(id);\n    const { artistName, collectionName } = data[0];\n    // aqui eu pego o primeiro item do array renderizado e resgato o nome do artista e do album\n    const songs = await data.filter((music) => music.kind === 'song');\n    // filtrando as musicas de acordo com uma chave dentro do array de musicas e assim fazendo ela ser uma função assincrona, usando tb a getMusics que faz a requisição e espera um id em string\n    this.setState({\n      artistName,\n      collectionName,\n      musics: songs,\n    });\n    // e assim que a requisição funciona eu seto o state para poder renderizar ele depois\n  }\n\n  render() {\n    const { artistName, musics, collectionName } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {/* renderizo o header que aparece os links */}\n        <div>\n          <h1 data-testid=\"album-name\">\n            {collectionName}\n          </h1>\n          <h4 data-testid=\"artist-name\">{artistName}</h4>\n          {musics.length > 0 && musics.map((key) => (\n            <MusicaCard\n              key={ key.trackId }\n              previewUrl={ key.previewUrl }\n              nameMusic={ key.trackName }\n              trackId={ key.trackId }\n              forSave={ key }\n            />\n            // aqui renderizo o componente card com suas props e uso um map para mapear cada um de acordo com as props e as devidas chaves que eu passei\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: propTypes.shape({\n    params: propTypes.objectOf(propTypes.number),\n  }),\n}.isRequired;\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\n\nclass Favorites extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        Bem vindo á sua página de musicas favoritas\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile\">\n        <h2> Pagina de Profile </h2>\n        <Header />\n      </div>);\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\n\nclass ProfileEdit extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <h2> Pagina de ProfileEdit </h2>\n        <Header />\n      </div>);\n  }\n}\n\nexport default ProfileEdit;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        <h2> Pagina não encontrada</h2>\n      </div>);\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      // renderização dos componentes nas devidas rotas\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={ Login } />\n          <Route path=\"/search\" component={ Search } />\n          <Route path=\"/album/:id\" component={ Album } />\n          <Route path=\"/favorites\" component={ Favorites } />\n          <Route path=\"/profile\" exact component={ Profile } />\n          <Route path=\"/profile/edit\" component={ ProfileEdit } />\n          <Route path=\"*\" component={ NotFound } />\n        </Switch>\n      </BrowserRouter>);\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}